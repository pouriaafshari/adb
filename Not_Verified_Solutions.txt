*****************************

[101]

declare 
  v oe.customers.cust_first_name%type;
  d oe.customers.date_of_birth%type;
begin
    select cust_first_name, date_of_birth
    into v, d
    from oe.customers oc
    order by oc.date_of_birth desc
    fetch first row with ties;
    dbms_output.put_line(v || ' ' || d);
end;

**********************************

[102] !!! The table has problem ... this shows customer names !!!

declare 
  a oe.customers.cust_first_name%type;
  b oe.customers.cust_last_name%type;
begin
    for i in
    (
        select oc.customer_id, count(*)
        from oe.orders oo left outer join oe.customers oc
        on oo.customer_id = oc.customer_id
        group by oc.customer_id
        having count(*) = 2
    )    
    loop
        select cust_first_name, cust_last_name
        into a, b
        from oe.customers oc
        where oc.customer_id = i.customer_id;
        dbms_output.put_line(a || ' ' || b);
    end loop;
end;




************************************


[201]

declare

    function karina
    (c_id oe.orders.customer_id%type,
     p_id oe.order_items.product_id%type)
    return number is
        v number(5);
    begin
        select count(*)
        into v
        from oe.orders oo
        inner join oe.order_items oi
        on oo.order_id = oi.order_id
        group by oo.customer_id, oi.product_id
        having oi.product_id = p_id
        and oo.customer_id = c_id;
        
        return v;
    end;

begin

    for i in 
    (
        select distinct oc.cust_first_name, oc.cust_last_name, oc.customer_id
        from oe.customers oc
        right outer join
        oe.orders oo on
        oc.customer_id = oo.customer_id
        where oc.cust_last_name like 'T%'
    )
    loop
        for k in 
        (
            select pi.product_id, pi.product_name
            from oe.order_items oi inner join 
            oe.orders oo on
            oi.order_id = oo.order_id inner join
            oe.product_information pi on
            pi.product_id = oi.product_id
            where oo.customer_id = i.customer_id
        )
        loop
            dbms_output.put_line
            (i.cust_first_name || ' ' || i.cust_last_name || ' '
             || k.product_name || ' ' || karina(i.customer_id, k.product_id));
        end loop;
        
    end loop;

end;





*************************
304 - 305
*************************




create table fmilymembers
(
CUSTOMER NUMBER(6,0),
FAMILYMEMBERNAME VARCHAR2(6)
)

/

create or replace function InsertMember
(
custid oe.customers.customer_id%type,
membername familymembers.familymembername%type
)
return varchar is 
val varchar(3);
tempid oe.customers.customer_id%type;
begin
    select customer_id
    into tempid
    from oe.customers oc where
    oc.customer_id = custid;
    insert into familymembers(customer, FAMILYMEMBERNAME)
    values (tempid, membername);
    val :='YES';
    return val;
end;

/
begin
dbms_output.put_line(InsertMember('142', 'Karina'));
exception
    when no_data_found then 
    dbms_output.put_line('No');
end;
/

select * from familymembers;






**********************
306
**********************



